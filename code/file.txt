void import_file(const char file_name[], string local_way)
{
	touch(file_name);
	int mask = 0b111111;
	int file_posi = find_file(file_name);
	if (!file_posi) {
		cout << "file not exit" << endl;
		return;
	}
	File file = seek_file(file_posi);

	int block_num = super_block.find_new_block();
	file.set_block(block_num);
	Block file_block = seek_block((file_posi >> 6) << 6);
	file_block.add_file(file, file_posi&mask);
	write_block(file_block, (file_posi >> 6) << 6);
	super_block.use_block(block_num);
	write_big_block(super_block);
	
	ifstream in("file.txt");
	string str;
	char c;
	while (!in.eof())
	{
		in >> c;
		str += c;
	}

	int length = str.size();
	char ch[244];
	int index = 0;
	while (length > 0)
	{
		int copy_len = (length > 243) ? 243 : length;
		length -= copy_len;
		for (size_t i = 0; i < copy_len; i++)
			ch[i] = str[index++];
		ch[copy_len] = 0;
		Block b;
		b.add_string(ch);
		int bits_len = (copy_len % 4) ? copy_len / 4 + 1 : copy_len / 4;
		b.set_bits_map(2, 2 + bits_len);
		if (length > 0) {
			int next_block_num = super_block.find_new_block();
			b.set_next(next_block_num << 6);
			super_block.use_block(next_block_num);
			write_block(b, block_num << 6);
			write_big_block(super_block);
			block_num = next_block_num;
		}
		else
		{
			write_block(b, block_num << 6);
			write_big_block(super_block);
		}
	}
}